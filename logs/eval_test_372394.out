running human_eval evaluation
INFO 02-13 11:14:17 __init__.py:183] Automatically detected platform cuda.
INFO 02-13 11:15:00 config.py:526] This model supports multiple tasks: {'classify', 'generate', 'score', 'reward', 'embed'}. Defaulting to 'generate'.
INFO 02-13 11:15:00 config.py:1383] Defaulting to use mp for distributed inference
INFO 02-13 11:15:00 llm_engine.py:232] Initializing a V0 LLM engine (v0.7.1) with config: model='Qwen/QwQ-32B-Preview', speculative_config=None, tokenizer='Qwen/QwQ-32B-Preview', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config=None, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=32768, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=None, enforce_eager=False, kv_cache_dtype=auto,  device_config=cuda, decoding_config=DecodingConfig(guided_decoding_backend='xgrammar'), observability_config=ObservabilityConfig(otlp_traces_endpoint=None, collect_model_forward_time=False, collect_model_execute_time=False), seed=0, served_model_name=Qwen/QwQ-32B-Preview, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=False, use_async_output_proc=True, disable_mm_preprocessor_cache=False, mm_processor_kwargs=None, pooler_config=None, compilation_config={"splitting_ops":[],"compile_sizes":[],"cudagraph_capture_sizes":[256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"max_capture_size":256}, use_cached_outputs=False, 
WARNING 02-13 11:15:01 multiproc_worker_utils.py:298] Reducing Torch parallelism from 16 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 02-13 11:15:01 custom_cache_manager.py:17] Setting Triton cache manager to: vllm.triton_utils.custom_cache_manager:CustomCacheManager
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:15:01 multiproc_worker_utils.py:227] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:15:01 multiproc_worker_utils.py:227] Worker ready; awaiting tasks
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:15:01 multiproc_worker_utils.py:227] Worker ready; awaiting tasks
INFO 02-13 11:15:04 cuda.py:235] Using Flash Attention backend.
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:15:04 cuda.py:235] Using Flash Attention backend.
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:15:04 cuda.py:235] Using Flash Attention backend.
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:15:04 cuda.py:235] Using Flash Attention backend.
INFO 02-13 11:15:07 utils.py:938] Found nccl from library libnccl.so.2
INFO 02-13 11:15:07 pynccl.py:67] vLLM is using nccl==2.21.5
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:15:07 utils.py:938] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:15:07 utils.py:938] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:15:07 utils.py:938] Found nccl from library libnccl.so.2
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:15:07 pynccl.py:67] vLLM is using nccl==2.21.5
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:15:07 pynccl.py:67] vLLM is using nccl==2.21.5
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:15:07 pynccl.py:67] vLLM is using nccl==2.21.5
[1;36m(VllmWorkerProcess pid=779816)[0;0m WARNING 02-13 11:15:09 custom_all_reduce.py:134] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=779806)[0;0m WARNING 02-13 11:15:09 custom_all_reduce.py:134] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
WARNING 02-13 11:15:09 custom_all_reduce.py:134] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
[1;36m(VllmWorkerProcess pid=779807)[0;0m WARNING 02-13 11:15:09 custom_all_reduce.py:134] Custom allreduce is disabled because it's not supported on more than two PCIe-only GPUs. To silence this warning, specify disable_custom_all_reduce=True explicitly.
INFO 02-13 11:15:09 shm_broadcast.py:256] vLLM message queue communication handle: Handle(connect_ip='127.0.0.1', local_reader_ranks=[1, 2, 3], buffer_handle=(3, 4194304, 6, 'psm_4ddc5a2a'), local_subscribe_port=35165, remote_subscribe_port=None)
INFO 02-13 11:15:09 model_runner.py:1111] Starting to load model Qwen/QwQ-32B-Preview...
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:15:09 model_runner.py:1111] Starting to load model Qwen/QwQ-32B-Preview...
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:15:09 model_runner.py:1111] Starting to load model Qwen/QwQ-32B-Preview...
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:15:09 model_runner.py:1111] Starting to load model Qwen/QwQ-32B-Preview...
INFO 02-13 11:15:10 weight_utils.py:251] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:15:10 weight_utils.py:251] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:15:10 weight_utils.py:251] Using model weights format ['*.safetensors']
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:15:10 weight_utils.py:251] Using model weights format ['*.safetensors']
INFO 02-13 11:19:58 model_runner.py:1116] Loading model weights took 15.3917 GB
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:19:58 model_runner.py:1116] Loading model weights took 15.3917 GB
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:19:58 model_runner.py:1116] Loading model weights took 15.3917 GB
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:19:58 model_runner.py:1116] Loading model weights took 15.3917 GB
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:20:14 worker.py:266] Memory profiling takes 16.20 seconds
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:20:14 worker.py:266] the current vLLM instance can use total_gpu_memory (93.00GiB) x gpu_memory_utilization (0.90) = 83.70GiB
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:20:14 worker.py:266] model weights take 15.39GiB; non_torch_memory takes 0.46GiB; PyTorch activation peak memory takes 2.86GiB; the rest of the memory reserved for KV Cache is 64.99GiB.
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:20:14 worker.py:266] Memory profiling takes 16.32 seconds
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:20:14 worker.py:266] the current vLLM instance can use total_gpu_memory (93.00GiB) x gpu_memory_utilization (0.90) = 83.70GiB
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:20:14 worker.py:266] model weights take 15.39GiB; non_torch_memory takes 0.46GiB; PyTorch activation peak memory takes 2.86GiB; the rest of the memory reserved for KV Cache is 64.99GiB.
INFO 02-13 11:20:15 worker.py:266] Memory profiling takes 16.38 seconds
INFO 02-13 11:20:15 worker.py:266] the current vLLM instance can use total_gpu_memory (93.00GiB) x gpu_memory_utilization (0.90) = 83.70GiB
INFO 02-13 11:20:15 worker.py:266] model weights take 15.39GiB; non_torch_memory takes 0.46GiB; PyTorch activation peak memory takes 2.86GiB; the rest of the memory reserved for KV Cache is 64.99GiB.
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:20:15 worker.py:266] Memory profiling takes 16.30 seconds
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:20:15 worker.py:266] the current vLLM instance can use total_gpu_memory (93.00GiB) x gpu_memory_utilization (0.90) = 83.70GiB
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:20:15 worker.py:266] model weights take 15.39GiB; non_torch_memory takes 0.46GiB; PyTorch activation peak memory takes 2.86GiB; the rest of the memory reserved for KV Cache is 64.99GiB.
INFO 02-13 11:20:15 executor_base.py:108] # CUDA blocks: 66553, # CPU blocks: 4096
INFO 02-13 11:20:15 executor_base.py:113] Maximum concurrency for 32768 tokens per request: 32.50x
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:20:18 model_runner.py:1435] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:20:18 model_runner.py:1435] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
INFO 02-13 11:20:18 model_runner.py:1435] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:20:18 model_runner.py:1435] Capturing cudagraphs for decoding. This may lead to unexpected consequences if the model is not static. To run the model in eager mode, set 'enforce_eager=True' or use '--enforce-eager' in the CLI. If out-of-memory error occurs during cudagraph capture, consider decreasing `gpu_memory_utilization` or switching to eager mode. You can also reduce the `max_num_seqs` as needed to decrease memory usage.
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:20:40 model_runner.py:1563] Graph capturing finished in 21 secs, took 0.91 GiB
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:20:40 model_runner.py:1563] Graph capturing finished in 21 secs, took 0.91 GiB
INFO 02-13 11:20:40 model_runner.py:1563] Graph capturing finished in 21 secs, took 0.91 GiB
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:20:40 model_runner.py:1563] Graph capturing finished in 21 secs, took 0.91 GiB
INFO 02-13 11:20:40 llm_engine.py:429] init engine (profile, create kv cache, warmup model) took 41.63 seconds
[RequestOutput(request_id=0, prompt='2+3=?', prompt_token_ids=[17, 10, 18, 19884], encoder_prompt=None, encoder_prompt_token_ids=None, prompt_logprobs=None, outputs=[CompletionOutput(index=0, text=' 2 + 3 = 5', token_ids=(220, 17, 488, 220, 18, 284, 220, 20, 151643), cumulative_logprob=None, logprobs=None, finish_reason=stop, stop_reason=151643)], finished=True, metrics=RequestMetrics(arrival_time=1739467240.6984673, last_token_time=1739467241.0695417, first_scheduled_time=1739467240.7049975, first_token_time=1739467240.9608192, time_in_queue=0.006530284881591797, finished_time=1739467241.069653, scheduler_time=0.0011622440069913864, model_forward_time=None, model_execute_time=None), lora_request=None, num_cached_tokens=0, multi_modal_placeholders={})]
--------------------------------
 2 + 3 = 5
INFO 02-13 11:20:41 multiproc_worker_utils.py:139] Terminating local vLLM worker processes
[1;36m(VllmWorkerProcess pid=779807)[0;0m INFO 02-13 11:20:41 multiproc_worker_utils.py:251] Worker exiting
[1;36m(VllmWorkerProcess pid=779816)[0;0m INFO 02-13 11:20:41 multiproc_worker_utils.py:251] Worker exiting
[1;36m(VllmWorkerProcess pid=779806)[0;0m INFO 02-13 11:20:41 multiproc_worker_utils.py:251] Worker exiting
